Preorder/Inorder/Postorder Traversal

class Solution {
public:
    vector<int> preInPostTraversal(TreeNode* root)
    {
        stack<pair<TreeNode*, int>> st; 
        st.push({root, 1}); 
        vector<int> pre, in, post;
        
        if (root == NULL) return; 
        
        while (!st.empty()) {
            { auto it=st.top();
            st.pop();

          if(it.second==1){
            pre.push_back(it.first->val);
            it.second++;
            st.push(it);

            if(it.first->left!=NULL)
            {
            st.push({it.first->left,i});
            }
          }
        }
        else if(it.second==2){
        in.push_back(it.first->val);
        it.second++;
        st.push(it);

      if(it.first->right!=NULL){
          st.push({it.first->right,1});
          }
        }//don't push it back again
      else{
      post.push_back(it.first->val);
      }
      }
    }
    };
            
